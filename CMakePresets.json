{
    "version": 3,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 23,
        "patch": 0
    },
    "configurePresets": [
        {
            "name": "base",
            "hidden": true,
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/install/${presetName}",
            "toolchainFile": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
            "generator": "Ninja",
            "warnings": {
                "dev": false
            },
            "cacheVariables": {
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
                "CMAKE_COLOR_DIAGNOSTICS": "ON"
            }
        },
        {
            "name": "linux",
            "hidden": true,
            "inherits": "base",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Linux"
            },
            "vendor": {
                "microsoft.com/VisualStudioRemoteSettings/CMake/1.0": {
                    "sourceDir": "$env{HOME}/.vs/$ms{projectDirName}",
                    "copySourcesOptions": {
                        "exclusionList": [
                            ".vs",
                            ".vscode",
                            ".git",
                            ".cache",
                            "build",
                            "install",
                            "out"
                        ]
                    }
                }
            }
        },
        {
            "name": "darwin",
            "hidden": true,
            "inherits": "base",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "cacheVariables": {
                "VCPKG_TARGET_TRIPLET": "arm64-osx"
            },
            "vendor": {
                "microsoft.com/VisualStudioRemoteSettings/CMake/1.0": {
                    "sourceDir": "$env{HOME}/.vs/$ms{projectDirName}",
                    "copySourcesOptions": {
                        "exclusionList": [
                            ".vs",
                            ".vscode",
                            ".git",
                            ".cache",
                            "build",
                            "install",
                            "out"
                        ]
                    }
                }
            }
        },
        {
            "name": "gcc",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_C_COMPILER": "gcc",
                "CMAKE_CXX_COMPILER": "g++",
                "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wpedantic",
                "CMAKE_CXX_FLAGS_DEBUG": "-O0 -g",
                "CMAKE_CXX_FLAGS_RELEASE": "-O3 -DNDEBUG",
                "CMAKE_EXE_LINKER_FLAGS": "-Wl,--exclude-libs=ALL -Wl,-z,defs -Wl,--as-needed",
                "CMAKE_MODULE_LINKER_FLAGS": "-Wl,--exclude-libs=ALL -Wl,-z,defs -Wl,--as-needed",
                "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--exclude-libs=ALL -Wl,-z,defs -Wl,--as-needed"
            }
        },
        {
            "name": "clang",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang",
                "CMAKE_CXX_COMPILER": "clang++",
                "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wno-missing-braces",
                "CMAKE_CXX_FLAGS_DEBUG": "-O0 -g",
                "CMAKE_CXX_FLAGS_RELEASE": "-O3 -DNDEBUG",
                "CMAKE_EXE_LINKER_FLAGS": "-Wl,--exclude-libs=ALL -Wl,-z,defs -Wl,--as-needed",
                "CMAKE_MODULE_LINKER_FLAGS": "-Wl,--exclude-libs=ALL -Wl,-z,defs -Wl,--as-needed",
                "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--exclude-libs=ALL -Wl,-z,defs -Wl,--as-needed",
                "CMAKE_CXX_SCAN_FOR_MODULES": "OFF"
            }
        },
        {
            "name": "clang-darwin",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_CXX_COMPILER": "clang++",
                "CMAKE_CXX_FLAGS": "-Wall -Wextra -Wno-missing-braces",
                "CMAKE_CXX_FLAGS_DEBUG": "-O0 -g",
                "CMAKE_CXX_FLAGS_RELEASE": "-O3 -DNDEBUG"
            }
        },
        {
            "name": "debug",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug"
            }
        },
        {
            "name": "release",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE": "ON"
            }
        },
        {
            "name": "asan",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "ASan",
                "CMAKE_CXX_FLAGS_ASAN": "-O1 -g -fsanitize=address -fno-omit-frame-pointer -DNDEBUG"
            }
        },
        {
            "name": "tsan",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "TSan",
                "CMAKE_CXX_FLAGS_TSAN": "-O1 -g -fsanitize=thread -DNDEBUG"
            }
        },
        {
            "name": "ubsan",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "UBSan",
                "CMAKE_CXX_FLAGS_UBSAN": "-O1 -g -fsanitize=undefined -fno-omit-frame-pointer -DNDEBUG"
            }
        },
        {
            "name": "msan",
            "description": "This is Clang-only configuration",
            "hidden": true,
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "MSan",
                "CMAKE_CXX_FLAGS_MSAN": "-O2 -g -fsanitize=memory -fno-omit-frame-pointer -DNDEBUG"
            }
        },
        {
            "name": "Linux-GCC-Debug",
            "inherits": [
                "linux",
                "gcc",
                "debug"
            ]
        },
        {
            "name": "Linux-GCC-Release",
            "inherits": [
                "linux",
                "gcc",
                "release"
            ]
        },
        {
            "name": "Linux-GCC-AddressSanitizer",
            "inherits": [
                "linux",
                "gcc",
                "asan"
            ]
        },
        {
            "name": "Linux-GCC-ThreadSanitizer",
            "inherits": [
                "linux",
                "gcc",
                "tsan"
            ]
        },
        {
            "name": "Linux-GCC-UBSanitizer",
            "inherits": [
                "linux",
                "gcc",
                "ubsan"
            ]
        },
        {
            "name": "Linux-Clang-Debug",
            "inherits": [
                "linux",
                "clang",
                "debug"
            ]
        },
        {
            "name": "Linux-Clang-Release",
            "inherits": [
                "linux",
                "clang",
                "release"
            ]
        },
        {
            "name": "Linux-Clang-AddressSanitizer",
            "inherits": [
                "linux",
                "clang",
                "asan"
            ]
        },
        {
            "name": "Linux-Clang-UBSanitizer",
            "inherits": [
                "linux",
                "clang",
                "ubsan"
            ]
        },
        {
            "name": "Darwin-Clang-Debug",
            "inherits": [
                "darwin",
                "clang-darwin",
                "debug"
            ]
        },
        {
            "name": "Darwin-Clang-Release",
            "inherits": [
                "darwin",
                "clang-darwin",
                "release"
            ]
        },
        {
            "name": "Darwin-Clang-AddressSanitizer",
            "inherits": [
                "darwin",
                "clang-darwin",
                "asan"
            ]
        },
        {
            "name": "Darwin-Clang-UBSanitizer",
            "inherits": [
                "darwin",
                "clang-darwin",
                "ubsan"
            ]
        }
    ]
}